name: Secure Container CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/secure-container-app:latest
      PORT: 3000

    permissions:
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep
        run: semgrep --config p/ci

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit --json --audit-level none > npm-audit.json

      - name: Upload NPM audit Report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM
        run: syft $IMAGE_NAME -o spdx-json > sbom.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Docker Image with Grype
        run: grype $IMAGE_NAME -o json > grype-report.json

      - name: Upload Grype Report
        uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype-report.json

      - name: Start Server in Background
        run: |
          docker run -d --name secure-container-app -p $PORT:$PORT $IMAGE_NAME
          sleep 10

      - name: Wait for Server to be Ready
        run: |
          until curl -s http://localhost:$PORT > /dev/null; do
            echo "Waiting for server..."
            sleep 5
          done
          echo "Server is up!"

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:${{env.$PORT}}'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap_report
          path: zap_report.json

      - name: Stop the Server
        run: docker stop secure-container-app