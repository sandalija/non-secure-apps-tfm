name: Comprehensive Security Scanning

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Set permissions for the workflow
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Python Dependency Scanning
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install semgrep safety

      - name: Run Semgrep
        run: |
          semgrep --config p/ci --json > semgrep-results.json
        continue-on-error: true

      - name: Run Safety (Python Dependency Checker)
        run: |
          safety check --full-report --output json > safety-report.json
        continue-on-error: true

      - name: Upload Dependency Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-scan-results
          path: |
            semgrep-results.json
            safety-report.json

  npm-audit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          npm audit fix || true

      - name: Run NPM Audit
        run: |
          npm audit --json --audit-level high > npm-audit-report.json

      - name: Upload NPM Audit Report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit-report.json

  container-security:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Container Build and Scan
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Syft and Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Build Secure Container
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t secure-container-app:${{ github.sha }} .

      - name: Generate SBOM
        run: |
          syft secure-container-app:${{ github.sha }} -o spdx-json > sbom.json

      - name: Scan Container Vulnerabilities
        run: |
          # Generate JSON report for machine parsing
          grype secure-container-app:${{ github.sha }} \
            -o json \
            > grype-results.json

          # Generate human-readable table report
          grype secure-container-app:${{ github.sha }} \
            -o table \
            | tee grype-results-table.txt

          # Generate SARIF for GitHub security dashboard
          grype secure-container-app:${{ github.sha }} \
            -o sarif \
            > grype-results.sarif

      - name: Upload Container Security Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: container-security-reports
          path: |
            sbom.json
            grype-results.json
            grype-results-table.txt
            grype-results.sarif

  web-security-scan:
    needs: [container-security]  # Ensure container is built first
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Launch Test Container
        run: |
          docker run -d --name test-app -p 3000:3000 secure-container-app:${{ github.sha }}

      - name: OWASP ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:3000'
          fail_action: false
          allow_issue_writing: true
          artifact_name: 'zap-scan-results'

      - name: Stop Test Container
        if: always()
        run: docker stop test-app

      - name: Upload ZAP Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-scan-results
          path: zap-scan-results.json