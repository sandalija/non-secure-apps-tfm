name: Secure Container CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  semgrep:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Semgrep
      - name: Install Semgrep
        run: |
          pip install semgrep

      # Step 3: Run Semgrep
      - name: Run Semgrep
        run: |
          semgrep --config p/ci 
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit --json --audit-level none > npm-audit.json

      - name: Upload NPM audit Report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: npm-audit.json

      # Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t secure-container-app .

      # Step 4: Install Syft
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      # Step 5: Generate SBOM
      - name: Generate SBOM
        run: |
          syft secure-container-app:latest -o spdx-json > sbom.json

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan Docker Image with Grype
        run: grype secure-container-app:latest

      - name: Upload Grype Report
        uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype-report.json

      # Step 6: Upload SBOM as an Artifact
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
        
      

      - name: Start Server in Background
        run: |
          docker run -d --name secure-container-app-p 8080:8080 secure-container-app
          sleep 10  # Adjust this if needed

      - name: Wait for Server to be Ready
        run: |
          until curl -s http://localhost:8080 > /dev/null; do
            echo "Waiting for server..."
            sleep 5
          done
          echo "Server is up!"

      - name: Run OWASP ZAP Scan
        run: |
          docker run --rm -t owasp/zap2docker-stable zap-baseline.py -t http://host.docker.internal:8080 -J zap_report.json

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap_report
          path: zap_report.json

      - name: Stop the Server
        run: docker stop secure-container-app